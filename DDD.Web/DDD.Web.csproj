<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <SpaProxyServerUrl>https://localhost:44450</SpaProxyServerUrl>
    <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
    <Description>ASPNET Core 7.0 - Angular 15 startup template for Quick Application Development</Description>
    <Copyright>Copyright Â© 2023 www.ebenmonney.com</Copyright>
    <PackageProjectUrl>https://www.ebenmonney.com/quickapp</PackageProjectUrl>
    <Company>EBENMONNEY</Company>
    <Version>7.1.0</Version>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="12.0.1" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="12.0.0" />
	  
    <PackageReference Include="Duende.IdentityServer" Version="6.2.1" />
    <PackageReference Include="Duende.IdentityServer.AspNetIdentity" Version="6.2.1" />
	  
    <PackageReference Include="IdentityServer.ExtensionGrant.Delegation" Version="2.2.0" />
	  
    <PackageReference Include="FluentValidation.AspNetCore" Version="11.3.0" />
    <PackageReference Include="MailKit" Version="3.6.0" />
	  
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="7.0.4" />
    <PackageReference Include="Microsoft.AspNetCore.JsonPatch" Version="7.0.4" />
    <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="7.0.4" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="7.0.4" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="7.0.4" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="7.0.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
	  
    <PackageReference Include="Serilog.Extensions.Logging.File" Version="3.0.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    <None Remove="$(SpaRoot)dist\**" />
    <None Remove="$(SpaRoot).angular\**" />
    <None Remove="Logs\**" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Sesc.Cultura.Application\DDD.Application.csproj" />
    <ProjectReference Include="..\Sesc.Cultura.Infra.CrossCutting.Bus\DDD.Infra.CrossCutting.Bus.csproj" />
    <ProjectReference Include="..\Sesc.Cultura.Infra.CrossCutting.Identity\DDD.Infra.CrossCutting.Identity.csproj" />
    <ProjectReference Include="..\Sesc.Cultura.Infra.CrossCutting.IoC\DDD.Infra.CrossCutting.IoC.csproj" />
  </ItemGroup>

  <ItemGroup>
    <!--Include email templates in the publish output-->
    <Content Include="Helpers\Templates\*.template" CopyToPublishDirectory="PreserveNewest" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install --legacy-peer-deps" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install --legacy-peer-deps" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --configuration production" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>